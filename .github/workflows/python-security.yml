# Workflow regarding python security scanning.
name: Python Security

on:
  push:
    branches:
      # Run on our main branch
      - main
    paths:
      - example-python/**
  pull_request:
    # Run for any pull requests
    branches:
      - main
jobs:
  # https://github.com/marketplace/actions/anchore-container-scan
  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  # Checkout the current branch/merge state
      - name: Grype Scan
        uses: anchore/scan-action@v3
        with:
          path: example-python
      - name: Pip Audit
        uses: pypa/gh-action-pip-audit@v1.1.0
        with:
          inputs: example-python
  code-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Run on Python versions that are stable and not EOL
        python-version: ["3.11"]
    permissions:
      # required for bandit
      security-events: write
    steps:
      - uses: actions/checkout@v4  # Checkout the current branch/merge state
      - name: Set up Python ${{ matrix.python-version }}  # Get Python ready to use
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies  # Get Tox and Poetry ready
        working-directory: ./example-python
        run: |
          python -m pip install --upgrade pip
          python -m pip install bandit[toml,sarif]
      - name: Run Bandit
        working-directory: ./example-python
        run: |
          bandit -r . -c pyproject.toml -f sarif >> bandit.sarif
      - if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: example-python/bandit.sarif
          category: bandit-python-analysis
